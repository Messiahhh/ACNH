{"version":3,"sources":["components/LazyImage.tsx","common/utils/observer.tsx","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","application/villager/index.tsx"],"names":["LazyImage","loadingSource","source","className","style","observer","onClick","myRef","useRef","useEffect","observe","current","unobserve","src","data-src","ref","useObserver","IntersectionObserver","entries","forEach","item","intersectionRatio","target","url","dataset","setAttribute","_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","Object","from","unsupportedIterableToArray","TypeError","personality","Cranky","text","value","Lazy","Smug","Jock","Normal","Snooty","Peppy","Uchi","species","Anteater","Bear","Bird","Bull","Cat","Cub","Chicken","Cow","Alligator","Deer","Dog","Duck","Elephant","Frog","Goat","Gorilla","Hamster","Hippo","Horse","Koala","Kangaroo","Lion","Monkey","Mouse","Octopus","Ostrich","Eagle","Penguin","Pig","Rabbit","Rhino","Sheep","Squirrel","Tiger","Wolf","columns","title","dataIndex","render","record","width","sorter","a","b","id","sortDirections","filters","values","onFilter","charCodeAt","birthday","split","map","i","Number","a_month","a_day","b_month","b_day","gender","initialVillager","name","birth","phrase","imgUrl","Villagers","useState","setVillager","useRouteMatch","path","dataSource","json","result","index","key","type","to","exact","pagination","position","onRow","event","changeVillager"],"mappings":"gHAAA,oBAsBeA,IApBf,YAOS,IANLC,EAMI,EANJA,cACAC,EAKI,EALJA,OACAC,EAII,EAJJA,UACAC,EAGI,EAHJA,MACAC,EAEI,EAFJA,SACAC,EACI,EADJA,QAEMC,EAAQC,iBAAO,MAOrB,OANAC,qBAAU,WAEN,OADAJ,EAASK,QAAQH,EAAMI,SAChB,WACHN,EAASO,UAAUL,EAAMI,YAE9B,IAEC,yBAAKR,UAAWA,EAAWC,MAAOA,EAAOS,IAAKZ,EAAea,WAAUZ,EAAQa,IAAKR,EAAOD,QAASA,M,iCClBrG,SAASU,IACZ,IAAMX,EAAW,IAAIY,sBAAqB,SAACC,GACvCA,EAAQC,SAAQ,SAACC,GACb,KAAIA,EAAKC,mBAAqB,GAA9B,CACM,IACMC,EAAWF,EAAXE,OACFC,EAAOD,EAAeE,QAAQX,IACpCS,EAAOG,aAAa,MAAOF,GAC3BlB,EAASO,UAAUU,UAI/B,OAAOjB,EAZX,mC,+rlKCIe,SAASqB,EAAmBC,GACzC,OCJa,SAA4BA,GACzC,GAAIC,MAAMC,QAAQF,GAAM,OAAO,OAAAG,EAAA,GAAiBH,GDGzC,CAAkBA,IELZ,SAA0BI,GACvC,GAAsB,qBAAXC,QAA0BA,OAAOC,YAAYC,OAAOH,GAAO,OAAOH,MAAMO,KAAKJ,GFIvD,CAAgBJ,IAAQ,OAAAS,EAAA,GAA2BT,IGLvE,WACb,MAAM,IAAIU,UAAU,wIHIwE,G,+DIaxFhC,EAAWW,cACXsB,EAAmB,CACrBC,OAAQ,CACJC,KAAM,eACNC,MAAO,UAEXC,KAAM,CACFF,KAAM,eACNC,MAAO,QAEXE,KAAM,CACFH,KAAM,eACNC,MAAO,QAEXG,KAAM,CACFJ,KAAM,eACNC,MAAO,QAEXI,OAAQ,CACJL,KAAM,eACNC,MAAO,UAEXK,OAAQ,CACJN,KAAM,eACNC,MAAO,UAEXM,MAAO,CACHP,KAAM,eACNC,MAAO,SAEXO,KAAM,CACFR,KAAM,qBACNC,MAAO,SAITQ,EAAe,CACjBC,SAAU,CACNV,KAAM,qBACNC,MAAO,YAEXU,KAAM,CACFX,KAAM,eACNC,MAAO,QAEXW,KAAM,CACFZ,KAAM,eACNC,MAAO,QAEXY,KAAM,CACFb,KAAM,SACNC,MAAO,QAEXa,IAAK,CACDd,KAAM,SACNC,MAAO,OAEXc,IAAK,CACDf,KAAM,eACNC,MAAO,OAEXe,QAAS,CACLhB,KAAM,eACNC,MAAO,WAEXgB,IAAK,CACDjB,KAAM,eACNC,MAAO,OAEXiB,UAAW,CACPlB,KAAM,eACNC,MAAO,aAEXkB,KAAM,CACFnB,KAAM,SACNC,MAAO,QAEXmB,IAAK,CACDpB,KAAM,SACNC,MAAO,OAEXoB,KAAM,CACFrB,KAAM,eACNC,MAAO,QAEXqB,SAAU,CACNtB,KAAM,eACNC,MAAO,YAEXsB,KAAM,CACFvB,KAAM,eACNC,MAAO,QAEXuB,KAAM,CACFxB,KAAM,eACNC,MAAO,QAEXwB,QAAS,CACLzB,KAAM,eACNC,MAAO,WAEXyB,QAAS,CACL1B,KAAM,eACNC,MAAO,WAEX0B,MAAO,CACH3B,KAAM,eACNC,MAAO,SAEX2B,MAAO,CACH5B,KAAM,SACNC,MAAO,SAEX4B,MAAO,CACH7B,KAAM,eACNC,MAAO,SAEX6B,SAAU,CACN9B,KAAM,eACNC,MAAO,YAEX8B,KAAM,CACF/B,KAAM,eACNC,MAAO,QAEX+B,OAAQ,CACJhC,KAAM,eACNC,MAAO,UAEXgC,MAAO,CACHjC,KAAM,eACNC,MAAO,SAEXiC,QAAS,CACLlC,KAAM,eACNC,MAAO,WAEXkC,QAAS,CACLnC,KAAM,eACNC,MAAO,WAEXmC,MAAO,CACHpC,KAAM,eACNC,MAAO,SAEXoC,QAAS,CACLrC,KAAM,eACNC,MAAO,WAEXqC,IAAK,CACDtC,KAAM,SACNC,MAAO,OAEXsC,OAAQ,CACJvC,KAAM,eACNC,MAAO,UAEXuC,MAAO,CACHxC,KAAM,eACNC,MAAO,SAEXwC,MAAO,CACHzC,KAAM,eACNC,MAAO,SAEXyC,SAAU,CACN1C,KAAM,eACNC,MAAO,YAEX0C,MAAO,CACH3C,KAAM,eACNC,MAAO,SAEX2C,KAAM,CACF5C,KAAM,SACNC,MAAO,SAKT4C,EAAiB,CACnB,CACIC,MAAO,eACPC,UAAW,OACXC,OAAQ,SAAC/C,EAAYgD,GACjB,OACI,6BACI,kBAACzF,EAAA,EAAD,CAAWG,UAAU,WAAWC,MAAO,CAAEsF,MAAO,IAAKzF,cAAc,gBAAgBC,OAAM,4BAAuBuF,EAAO,aAA9B,QAAkDpF,SAAUA,IACrJ,8BAAOoC,EAAM,eAK7B,CACI6C,MAAO,eACPC,UAAW,KACXI,OAAQ,SAACC,EAAQC,GAAT,OAAoBD,EAAEE,GAAKD,EAAEC,IACrCC,eAAgB,CAAC,YAErB,CACIT,MAAO,eACPC,UAAW,cACXC,OAAQ,SAAC/C,GACL,OAAOH,EAAYG,GAAOD,MAE9BwD,QAAQ,EACD9D,OAAO+D,OAAO3D,IAErB4D,SAAU,SAACzD,EAAegD,GACtB,OAAOA,EAAOnD,cAAgBG,GAElCkD,OAAQ,SAACC,EAAQC,GAGb,OAFcD,EAAEtD,YAAY6D,WAAW,GACzBN,EAAEvD,YAAY6D,WAAW,KAI/C,CACIb,MAAO,eACPC,UAAW,kBACXI,OAAQ,SAACC,EAAQC,GAAY,IAAD,EACCD,EAAEQ,SAASC,MAAM,KAAKC,KAAI,SAACC,GAAD,OAAeC,OAAOD,MADjD,mBACjBE,EADiB,KACRC,EADQ,OAECb,EAAEO,SAASC,MAAM,KAAKC,KAAI,SAACC,GAAD,OAAeC,OAAOD,MAFjD,mBAEjBI,EAFiB,KAERC,EAFQ,KAIxB,OAAIF,IAAUE,EAAcF,EAAQE,EAEzBH,EAAUE,IAI7B,CACIrB,MAAO,eACPC,UAAW,UACXC,OAAQ,SAAC/C,GACL,OAAOQ,EAAQR,GAAOD,MAE1BwD,QAAQ,EACD9D,OAAO+D,OAAOhD,IAErBiD,SAAU,SAACzD,EAAegD,GACtB,OAAOA,EAAOxC,UAAYR,GAE9BkD,OAAQ,SAACC,EAAQC,GAGb,OAFcD,EAAE3C,QAAQkD,WAAW,GACrBN,EAAE5C,QAAQkD,WAAW,KAI3C,CACIb,MAAO,eACPC,UAAW,SACXC,OAAQ,SAAC/C,GACL,MAAc,SAAVA,EAAyB,SACtB,UAEXuD,QAAS,CACL,CACIxD,KAAM,SACNC,MAAO,QAEX,CACID,KAAM,SACNC,MAAO,WAGfyD,SAAU,SAACzD,EAAegD,GAAhB,OAAgCA,EAAOoB,SAAWpE,GAC5DkD,OAAQ,SAACC,EAAQC,GAAT,OAAoBD,EAAEiB,OAAOV,WAAW,GAAKN,EAAEgB,OAAOV,WAAW,MAc3EW,EAAyB,CAC3BhB,GAAI,EACJiB,KAAM,eACNC,MAAO,GACP1E,YAAa,GACbW,QAAS,GACTgE,OAAQ,GACRC,OAAQ,IAgGGC,UA7Ff,WAAsB,IAAD,EACgBC,mBAASN,GADzB,mBACCO,GADD,aAEKC,cAAdC,EAFS,EAETA,KAAMhG,EAFG,EAEHA,IAcdd,qBAAU,cAMP,IAEH,IAAM+G,EAAatF,OAAO+D,OAAOwB,GAC3BC,EAASF,EAAWlB,KAAI,SAAClF,EAAMuG,GACjC,OACI,yBAAKxH,UAAU,OAAOyH,IAAKxG,EAAK0E,IAC5B,6BACK1E,EAAK2F,KAAK,YAEf,6BACM3F,EAAKgF,SAASC,MAAM,KAAK,GAD/B,WACsCjF,EAAKgF,SAASC,MAAM,KAAK,GAD/D,WAGA,kBAACrG,EAAA,EAAD,CAAWG,UAAU,WAAWF,cAAc,gBAAgBC,OAAM,4BAAuBkB,EAAK,aAA5B,QAAgDf,SAAUA,QAK1I,OACI,6BA2BI,yBAAKF,UAAU,QACX,uBAAQA,UAAU,MAAM0H,KAAK,WAAU,kBAAC,IAAD,CAAMC,GAAIvG,GAAV,iBACvC,uBAAQpB,UAAU,MAAM0H,KAAK,WAAU,kBAAC,IAAD,CAAMC,GAAE,UAAKvG,EAAL,WAAR,kBAE3C,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOwG,OAAK,EAACR,KAAMA,GACf,yBAAKpH,UAAU,WACTuH,IAGV,kBAAC,IAAD,CAAOH,KAAI,UAAKA,EAAL,WACP,6BACI,uBAAOC,WAAYA,EAAYnC,QAASA,EAAS2C,WAAY,CAAEC,SAAU,CAAC,iBAAkBC,MAAO,SAAAzC,GAC/F,MAAO,CACHnF,QAAS,SAAC6H,IA7EtC,SAAwB1C,GACpB4B,EAAY,CACRvB,GAAIL,EAAOK,GACXiB,KAAMtB,EAAOsB,KAAK,WAClBC,MAAOvB,EAAO,mBACdnD,YAAaA,EAAYmD,EAAOnD,aAAaE,KAC7CS,QAASA,EAAQwC,EAAOxC,SAAST,KACjCyE,OAAQxB,EAAO,gBACfyB,OAAO,uCAAD,OAAyCzB,EAAOK,MAsE9BsC,CAAe3C","file":"static/js/9.4b039742.chunk.js","sourcesContent":["import React, { useRef, useEffect } from 'react'\r\n\r\nfunction LazyImage({\r\n    loadingSource,\r\n    source,\r\n    className,\r\n    style,\r\n    observer,\r\n    onClick,\r\n}: any) {\r\n    const myRef = useRef(null)\r\n    useEffect(() => {\r\n        observer.observe(myRef.current)\r\n        return () => {\r\n            observer.unobserve(myRef.current)\r\n        }\r\n    }, [])\r\n    return (\r\n        <img className={className} style={style} src={loadingSource} data-src={source} ref={myRef} onClick={onClick}/>\r\n    )\r\n}\r\n\r\nexport default LazyImage","export function useObserver() {\r\n    const observer = new IntersectionObserver((entries) => {\r\n        entries.forEach((item: any) => {\r\n            if (item.intersectionRatio <= 0) return \r\n            else {\r\n                const { target } = item\r\n                const url = (target as any).dataset.src\r\n                target.setAttribute('src', url)\r\n                observer.unobserve(target)                \r\n            }\r\n        })\r\n    })\r\n    return observer\r\n}","import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import React, {\r\n    useState,\r\n    useEffect,\r\n} from 'react'\r\nimport {\r\n    Link,\r\n    Switch,\r\n    Route,\r\n    useRouteMatch,\r\n} from 'react-router-dom'\r\nimport {\r\n    Table,\r\n    Button,\r\n} from 'antd'\r\nimport json from '../../common/json/villagers.json'\r\nimport axios from 'axios'\r\nimport LazyImage from '../../components/LazyImage'\r\nimport { useObserver } from '../../common/utils/observer'\r\nconst observer = useObserver()\r\nconst personality: any = {\r\n    Cranky: {\r\n        text: '暴躁',\r\n        value: 'Cranky',\r\n    },\r\n    Lazy: {\r\n        text: '悠闲',\r\n        value: 'Lazy',\r\n    },\r\n    Smug: {\r\n        text: '自恋',\r\n        value: 'Smug',\r\n    },\r\n    Jock: {\r\n        text: '运动',\r\n        value: 'Jock',\r\n    },\r\n    Normal: {\r\n        text: '普通',\r\n        value: 'Normal',\r\n    },\r\n    Snooty: {\r\n        text: '成熟',\r\n        value: 'Snooty',\r\n    },\r\n    Peppy: {\r\n        text: '元气',\r\n        value: 'Peppy',\r\n    },\r\n    Uchi: {\r\n        text: '大姐姐',\r\n        value: 'Uchi',\r\n    },\r\n}\r\n\r\nconst species: any = {\r\n    Anteater: {\r\n        text: '食蚁兽',\r\n        value: 'Anteater',\r\n    },\r\n    Bear: {\r\n        text: '大熊',\r\n        value: 'Bear',\r\n    },\r\n    Bird: {\r\n        text: '小鸟',\r\n        value: 'Bird',\r\n    },\r\n    Bull: {\r\n        text: '牛',\r\n        value: 'Bull',\r\n    },\r\n    Cat: {\r\n        text: '猫',\r\n        value: 'Cat',\r\n    },\r\n    Cub: {\r\n        text: '小熊',\r\n        value: 'Cub',\r\n    },\r\n    Chicken: {\r\n        text: '小鸡',\r\n        value: 'Chicken',\r\n    },\r\n    Cow: {\r\n        text: '奶牛',\r\n        value: 'Cow',\r\n    },\r\n    Alligator: {\r\n        text: '鳄鱼',\r\n        value: 'Alligator',\r\n    },\r\n    Deer: {\r\n        text: '鹿',\r\n        value: 'Deer',\r\n    },\r\n    Dog: {\r\n        text: '狗',\r\n        value: 'Dog',\r\n    },\r\n    Duck: {\r\n        text: '鸭子',\r\n        value: 'Duck'\r\n    },\r\n    Elephant: {\r\n        text: '大象',\r\n        value: 'Elephant'\r\n    },\r\n    Frog: {\r\n        text: '青蛙',\r\n        value: 'Frog'\r\n    },\r\n    Goat: {\r\n        text: '山羊',\r\n        value: 'Goat',\r\n    },\r\n    Gorilla: {\r\n        text: '猩猩',\r\n        value: 'Gorilla'\r\n    },\r\n    Hamster: {\r\n        text: '仓鼠',\r\n        value: 'Hamster'\r\n    },\r\n    Hippo: {\r\n        text: '河马',\r\n        value: 'Hippo',\r\n    },\r\n    Horse: {\r\n        text: '马',\r\n        value: 'Horse'\r\n    },\r\n    Koala: {\r\n        text: '考拉',\r\n        value: 'Koala'\r\n    },\r\n    Kangaroo: {\r\n        text: '袋鼠',\r\n        value: 'Kangaroo'\r\n    },\r\n    Lion: {\r\n        text: '狮子',\r\n        value: 'Lion'\r\n    },\r\n    Monkey: {\r\n        text: '猴子',\r\n        value: 'Monkey'\r\n    },\r\n    Mouse: {\r\n        text: '老鼠',\r\n        value: 'Mouse'\r\n    },\r\n    Octopus: {\r\n        text: '章鱼',\r\n        value: 'Octopus'\r\n    },\r\n    Ostrich: {\r\n        text: '鸵鸟',\r\n        value: 'Ostrich'\r\n    },\r\n    Eagle: {\r\n        text: '老鹰',\r\n        value: 'Eagle'\r\n    },\r\n    Penguin: {\r\n        text: '企鹅',\r\n        value: 'Penguin'\r\n    },\r\n    Pig: {\r\n        text: '猪',\r\n        value: 'Pig'\r\n    },\r\n    Rabbit: {\r\n        text: '兔子',\r\n        value: 'Rabbit'\r\n    },\r\n    Rhino: {\r\n        text: '犀牛',\r\n        value: 'Rhino'\r\n    },\r\n    Sheep: {\r\n        text: '绵羊',\r\n        value: 'Sheep'\r\n    },\r\n    Squirrel: {\r\n        text: '松鼠',\r\n        value: 'Squirrel'\r\n    },\r\n    Tiger: {\r\n        text: '老虎',\r\n        value: 'Tiger'\r\n    },\r\n    Wolf: {\r\n        text: '狼',\r\n        value: 'Wolf'\r\n    }\r\n\r\n}\r\n\r\nconst columns: any[] = [\r\n    {\r\n        title: \"名称\",\r\n        dataIndex: 'name',\r\n        render: (value: any, record: any) => {\r\n            return (\r\n                <div >\r\n                    <LazyImage className=\"fish_img\" style={{ width: 50}} loadingSource='./loading.svg' source={`./icons/villagers/${record[\"file-name\"]}.png`} observer={observer}></LazyImage>\r\n                    <span>{value['name-cn']}</span>\r\n                </div>\r\n            )\r\n        }\r\n    },\r\n    {\r\n        title: \"序号\",\r\n        dataIndex: 'id',\r\n        sorter: (a: any, b: any) => a.id - b.id,\r\n        sortDirections: ['descend'],\r\n    },\r\n    {\r\n        title: \"性格\",\r\n        dataIndex: 'personality',\r\n        render: (value: string) => {\r\n            return personality[value].text\r\n        },\r\n        filters: [\r\n            ...Object.values(personality)\r\n        ],\r\n        onFilter: (value: string, record: any) => {\r\n            return record.personality === value\r\n        },\r\n        sorter: (a: any, b: any) => {\r\n            const char1 = a.personality.charCodeAt(0)\r\n            const char2 = b.personality.charCodeAt(0)\r\n            return char1 - char2\r\n        }\r\n    },\r\n    {\r\n        title: \"生日\",\r\n        dataIndex: 'birthday-string',\r\n        sorter: (a: any, b: any) => {\r\n            const [a_month, a_day] = a.birthday.split('/').map((i: string) => Number(i))\r\n            const [b_month, b_day] = b.birthday.split('/').map((i: string) => Number(i))\r\n            \r\n            if (a_day !== b_day) return a_day - b_day \r\n            else {\r\n                return a_month - b_month\r\n            }\r\n        }\r\n    },\r\n    {\r\n        title: '种族',\r\n        dataIndex: 'species',\r\n        render: (value: string) => {\r\n            return species[value].text\r\n        },\r\n        filters: [\r\n            ...Object.values(species)\r\n        ],\r\n        onFilter: (value: string, record: any) => {\r\n            return record.species === value\r\n        },\r\n        sorter: (a: any, b: any) => {\r\n            const char1 = a.species.charCodeAt(0)\r\n            const char2 = b.species.charCodeAt(0)\r\n            return char1 - char2\r\n        }\r\n    },\r\n    {\r\n        title: '性别',\r\n        dataIndex: 'gender',\r\n        render: (value: string) => {\r\n            if (value === 'Male') return '男'\r\n            return '女'\r\n        },\r\n        filters: [\r\n            {\r\n                text: '男',\r\n                value: 'Male',\r\n            },\r\n            {\r\n                text: '女',\r\n                value: 'Female'\r\n            },\r\n        ],\r\n        onFilter: (value: string, record: any) => record.gender === value,\r\n        sorter: (a: any, b: any) => a.gender.charCodeAt(0) - b.gender.charCodeAt(0)\r\n    }\r\n]\r\n\r\ninterface State {\r\n    id: number,\r\n    name: string,\r\n    birth: string,\r\n    personality: string,\r\n    species: string,\r\n    phrase: string,\r\n    imgUrl: string,\r\n}\r\n\r\nconst initialVillager: State = {\r\n    id: 0,\r\n    name: '名字',\r\n    birth: '',\r\n    personality: '',\r\n    species: '',\r\n    phrase: '',\r\n    imgUrl: ''\r\n}\r\n\r\nfunction Villagers() {\r\n    const [ villager, setVillager] = useState(initialVillager)\r\n    const { path, url } = useRouteMatch()\r\n\r\n    function changeVillager(record: any) {\r\n        setVillager({\r\n            id: record.id,\r\n            name: record.name['name-cn'],\r\n            birth: record['birthday-string'],\r\n            personality: personality[record.personality].text,\r\n            species: species[record.species].text,\r\n            phrase: record['catch-phrase'],\r\n            imgUrl: `http://acnhapi.com/images/villagers/${record.id}`,\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        // (async function () {\r\n        //     const id = ~~(Math.random() * 391) + 1\r\n        //     const { data } = await axios.get(`http://acnhapi.com/villagers/${id}`)\r\n        //     changeVillager(data)\r\n        // })() \r\n    }, [])\r\n\r\n    const dataSource = Object.values(json)\r\n    const result = dataSource.map((item, index) => {\r\n        return (\r\n            <div className=\"item\" key={item.id}>\r\n                <div>\r\n                    {item.name['name-cn']}\r\n                </div>\r\n                <div>\r\n                     {item.birthday.split('/')[1]} 月 {item.birthday.split('/')[0]} 日\r\n                </div>\r\n                <LazyImage className=\"fish_img\" loadingSource='./loading.svg' source={`./icons/villagers/${item['file-name']}.png`} observer={observer}></LazyImage>\r\n                {/* <img className='fish_img' src={require(`../../static/icons/villagers/${item['file-name']}.png`)} alt=\"小动物\"/> */}\r\n            </div>\r\n        )\r\n    })\r\n    return (\r\n        <div>\r\n            \r\n            {/* <div className=\"villager\">\r\n                <div className=\"villager-image\" style={{ backgroundImage: `url(${villager.imgUrl})`}}>\r\n                    \r\n                </div>\r\n                <div className=\"villager-info\">\r\n                    <div className=\"villager-name\">{villager.name}</div>\r\n                    <div className=\"info\">\r\n                        <div className=\"label\">生日</div>\r\n                        <div className=\"birth\">{villager.birth}</div>\r\n                    </div>\r\n                    <div className=\"info\">\r\n                        <div className=\"label\">性格</div>\r\n                        <div className=\"birth\">{villager.personality}</div>\r\n                    </div>\r\n                    <div className=\"info\">\r\n                        <div className=\"label\">种族</div>\r\n                        <div className=\"birth\">{villager.species}</div>\r\n                    </div>\r\n                    <div className=\"info\">\r\n                        <div className=\"label\">口头禅</div>\r\n                        <div className=\"birth\">{villager.phrase}</div>\r\n                    </div>\r\n                </div>\r\n            </div> */}\r\n\r\n            <div className=\"form\">\r\n                <Button className=\"btn\" type=\"primary\"><Link to={url}>图鉴</Link></Button>\r\n                <Button className=\"btn\" type=\"primary\"><Link to={`${url}/table`}>表格</Link></Button>\r\n            </div>\r\n            <Switch>\r\n                <Route exact path={path}>\r\n                    <div className=\"contain\">\r\n                        { result }\r\n                    </div>\r\n                </Route>\r\n                <Route path={`${path}/table`}>\r\n                    <div>\r\n                        <Table dataSource={dataSource} columns={columns} pagination={{ position: ['bottomCenter']}} onRow={record => {\r\n                            return {\r\n                                onClick: (event: any) => {\r\n                                    changeVillager(record)\r\n                                }\r\n                            }\r\n                        }}></Table>\r\n                    </div>\r\n                </Route>\r\n            </Switch>\r\n        </div>\r\n        \r\n    )\r\n}\r\nexport default Villagers"],"sourceRoot":""}