{"version":3,"sources":["components/LazyImage.tsx","common/utils/observer.tsx","components/months.tsx","common/utils/fish_data.tsx","common/utils/fish_match.tsx","application/bug/index.tsx"],"names":["LazyImage","loadingSource","source","className","style","observer","onClick","myRef","useRef","useEffect","observe","current","unobserve","src","data-src","ref","useObserver","IntersectionObserver","entries","forEach","item","intersectionRatio","target","url","dataset","setAttribute","Option","Months","handleChange","month","width","placeholder","onChange","value","months","所有时间","一月","二月","三月","四月","五月","六月","七月","八月","九月","十月","十一月","十二月","places","sizes","所有大小","最小","小","中等","大","超大","最大","狭长","背鳍","monthMatchInterval","interval","split","map","i","Number","month_start","month_end","matchMonth","includes","s","trim","interval_a","interval_b","matchPlace","p1","p2","place_a","place_b","matchSize","s1","s2","columns","title","dataIndex","render","record","sorter","a","b","id","sortDirections","text","toUpperCase","price","children","location","Bugs","dispatch","useDispatch","useSelector","state","bug","useRouteMatch","path","dataSource","Object","values","json","result","index","item_month","availability","key","name","type","to","changeMonth","exact"],"mappings":"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","file":"static/js/5.787c4ee9.chunk.js","sourcesContent":["import React, { useRef, useEffect } from 'react'\r\n\r\nfunction LazyImage({\r\n    loadingSource,\r\n    source,\r\n    className,\r\n    style,\r\n    observer,\r\n    onClick,\r\n}: any) {\r\n    const myRef = useRef(null)\r\n    useEffect(() => {\r\n        observer.observe(myRef.current)\r\n        return () => {\r\n            observer.unobserve(myRef.current)\r\n        }\r\n    }, [])\r\n    return (\r\n        <img className={className} style={style} src={loadingSource} data-src={source} ref={myRef} onClick={onClick}/>\r\n    )\r\n}\r\n\r\nexport default LazyImage","export function useObserver() {\r\n    const observer = new IntersectionObserver((entries) => {\r\n        entries.forEach((item: any) => {\r\n            if (item.intersectionRatio <= 0) return \r\n            else {\r\n                const { target } = item\r\n                const url = (target as any).dataset.src\r\n                target.setAttribute('src', url)\r\n                observer.unobserve(target)                \r\n            }\r\n        })\r\n    })\r\n    return observer\r\n}","import React from 'react'\r\nimport { Select } from 'antd'\r\n\r\nconst { Option } = Select\r\n\r\nfunction Months({\r\n    handleChange,\r\n    month,\r\n}: any) {    \r\n    return (\r\n        <Select style={{ width: '30%' }} placeholder={month} onChange={(value) => handleChange(value)}>\r\n            <Option value=\"所有时间\">所有时间</Option>\r\n            <Option value=\"一月\">一月</Option>\r\n            <Option value=\"二月\">二月</Option>\r\n            <Option value=\"三月\">三月</Option>\r\n            <Option value=\"四月\">四月</Option>\r\n            <Option value=\"五月\">五月</Option>\r\n            <Option value=\"六月\">六月</Option>\r\n            <Option value=\"七月\">七月</Option>\r\n            <Option value=\"八月\">八月</Option>\r\n            <Option value=\"九月\">九月</Option>\r\n            <Option value=\"十月\">十月</Option>\r\n            <Option value=\"十一月\">十一月</Option>\r\n            <Option value=\"十二月\">十二月</Option>\r\n        </Select>\r\n    )\r\n}\r\n\r\nexport default Months","const months: any = {\r\n    所有时间: 0,\r\n    一月: 1,\r\n    二月: 2,\r\n    三月: 3,\r\n    四月: 4,\r\n    五月: 5,\r\n    六月: 6,\r\n    七月: 7,\r\n    八月: 8,\r\n    九月: 9,\r\n    十月: 10,\r\n    十一月: 11,\r\n    十二月: 12,\r\n}\r\nconst places: any = {\r\n    '所有地点': '',\r\n    '河流': 'River',\r\n    '池塘': 'Pond',\r\n    '大海': 'Sea',\r\n    '入海口': 'River (Mouth)',\r\n    '码头': 'Pier',\r\n    '悬崖上': 'River (Clifftop)',\r\n    '雨天大海': 'Sea (when raining or snowing)',\r\n}\r\n\r\nconst sizes: any = {\r\n    所有大小: '',\r\n    最小: \"Smallest (1)\",\r\n    小: \"Small (2)\",\r\n    中等: \"Medium (3)\",\r\n    大: \"Medium (4)\",\r\n    超大: \"Large (5)\",\r\n    最大: \"Largest (6)\",\r\n    狭长: \"Narrow\",\r\n    背鳍: 'fin'\r\n}\r\n\r\nexport {\r\n    months,\r\n    places,\r\n    sizes,\r\n}","/**\r\n * @param {number} month\r\n * @param {string} interval\r\n * @returns {boolean}\r\n */\r\nfunction monthMatchInterval(month: number, interval: string): boolean {\r\n    const [month_start, month_end] = interval.split('-').map(i => Number(i))\r\n    if (month_start > month_end) {\r\n        if (month >= month_start || month <= month_end) return true\r\n    }\r\n    else {\r\n        if (month >= month_start && month <= month_end) return true\r\n    }\r\n    return false\r\n}\r\n\r\nexport function matchMonth(month: number, interval: string): boolean{\r\n    if (month === 0 || interval === '') return true\r\n    if (interval.includes('&')) {\r\n        const [interval_a, interval_b] = interval.split('&').map(s => s.trim())\r\n        return monthMatchInterval(month, interval_a) || monthMatchInterval(month, interval_b)\r\n    } else {\r\n        return monthMatchInterval(month, interval)\r\n    }\r\n}\r\n\r\nexport function matchPlace(p1: string, p2: string): boolean {\r\n    if (p1 === '') return true\r\n    if (p2.includes('&')) {\r\n        const [place_a, place_b] = p2.split('&').map(s => s.trim())\r\n        return p1 === place_a || p1 === place_b\r\n    }\r\n    return p1 === p2\r\n}\r\n\r\nexport function matchSize(s1: string, s2: string): boolean {\r\n    if (s1 === '') return true\r\n    if (s1 === 'fin' && s2.includes('fin')) return true\r\n    if (s1.includes('6') && s2.includes('fin (6)')) return true \r\n    if (s1.includes('Medium') && s2.includes('fin (4)')) return true\r\n    return s1 === s2 \r\n}","import React from 'react'\r\n\r\nimport {\r\n    useDispatch,\r\n    useSelector,\r\n} from 'react-redux'\r\n\r\nimport {\r\n    Link,\r\n    Switch,\r\n    Route,\r\n    useRouteMatch,\r\n} from 'react-router-dom'\r\n\r\nimport {\r\n    Button,\r\n    Table,\r\n} from 'antd'\r\n\r\nimport json from '../../common/json/bugs.json'\r\nimport Months from '../../components/months'\r\n\r\nimport { months } from '../../common/utils/fish_data'\r\n\r\nimport { \r\n    changeMonth\r\n} from './store/actionCreator'\r\nimport { StateType as RootState } from './type'\r\nimport { matchMonth } from '../../common/utils/fish_match'\r\nimport { useObserver } from '../../common/utils/observer'\r\nimport LazyImage from '../../components/LazyImage'\r\nconst observer = useObserver()\r\n\r\nconst columns: any[] = [\r\n    {\r\n        title: \"名称\",\r\n        dataIndex: 'name',\r\n        render: (value: any, record: any) => {\r\n            return (\r\n                <div >\r\n                    <LazyImage  className='fish_img' style={{ width: 50}} loadingSource='./loading.svg' source={`./icons/bugs/${record[\"file-name\"]}.png`} observer={observer}></LazyImage>\r\n                    <span>{value['name-cn']}</span>\r\n                </div>\r\n            )\r\n        }\r\n    },\r\n    {\r\n        title: \"序号\",\r\n        dataIndex: 'id',\r\n        sorter: (a: any, b: any) => a.id - b.id,\r\n        sortDirections: ['descend'],\r\n    },\r\n    {\r\n        title: \"英文名\",\r\n        dataIndex: 'file-name',\r\n        render: (text: string) => text.toUpperCase()\r\n    },\r\n    {\r\n        title: '价格',\r\n        dataIndex: 'price',\r\n        sorter: (a: any, b: any) => a.price - b.price,\r\n    },\r\n    {\r\n        title: '地点',\r\n        dataIndex: 'availability',\r\n        render: (children: any) => <div>{children.location}</div>,\r\n\r\n    },\r\n\r\n]\r\n\r\nfunction Bugs() {\r\n    const dispatch = useDispatch()\r\n    const [\r\n        month,\r\n    ] = useSelector((state: any) => [state.bug.month])\r\n    const { path, url } = useRouteMatch()\r\n\r\n    function onMonthChange (value: string):void {\r\n        dispatch(changeMonth(value))\r\n    }\r\n\r\n\r\n    const dataSource = Object.values(json)\r\n    \r\n\r\n\r\n\r\n    const result = dataSource.map((item, index) => {\r\n        const item_month = item.availability[\"month-northern\"]\r\n        if (matchMonth(months[month], item_month)) {\r\n            return (\r\n                <div className=\"item\" key={item.id}>\r\n                    <div>\r\n                        {item.name['name-cn']}\r\n                    </div>\r\n                    <div>\r\n                        ${item.price}\r\n                    </div>\r\n                    <LazyImage className='fish_img' loadingSource='./loading.svg' source={`./icons/bugs/${item[\"file-name\"]}.png`} observer={observer}></LazyImage>\r\n                    {/* <img className='fish_img' src={require(`../../static/icons/bugs/${item['file-name']}.png`)} alt=\"昆虫\"/> */}\r\n                </div>\r\n            )\r\n        } else {\r\n            return null\r\n        }\r\n    })\r\n    return (\r\n        <div>\r\n            <div className=\"form\">\r\n                <Button className=\"btn\" type=\"primary\"><Link to={url}>图鉴</Link></Button>\r\n                <Button className=\"btn\" type=\"primary\"><Link to={`${url}/table`}>表格</Link></Button>\r\n            </div>\r\n            <div className=\"form\">\r\n                <Months handleChange={onMonthChange} month={month}></Months>\r\n            </div>\r\n            <Switch>\r\n                <Route exact path={path}>\r\n                    <div className=\"contain\">\r\n                        { result }\r\n                    </div>\r\n                </Route>\r\n                <Route path={`${path}/table`}>\r\n                    <Table dataSource={dataSource} columns={columns}></Table>\r\n                </Route>\r\n            </Switch>\r\n            \r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default Bugs"],"sourceRoot":""}