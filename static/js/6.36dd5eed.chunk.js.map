{"version":3,"sources":["components/LazyImage.tsx","common/utils/observer.tsx","components/months.tsx","common/utils/fish_data.tsx","common/utils/fish_match.tsx","components/places.tsx","components/sizes.tsx","application/fish/index.tsx"],"names":["LazyImage","loadingSource","source","className","style","observer","onClick","myRef","useRef","useEffect","observe","current","unobserve","src","data-src","ref","useObserver","IntersectionObserver","entries","forEach","item","intersectionRatio","target","url","dataset","setAttribute","Option","Months","handleChange","month","width","placeholder","onChange","value","months","所有时间","一月","二月","三月","四月","五月","六月","七月","八月","九月","十月","十一月","十二月","places","sizes","所有大小","最小","小","中等","大","超大","最大","狭长","背鳍","monthMatchInterval","interval","split","map","i","Number","month_start","month_end","matchMonth","includes","s","trim","interval_a","interval_b","matchPlace","p1","p2","place_a","place_b","matchSize","s1","s2","Places","place","v","Sizes","size","columns","title","dataIndex","render","record","sorter","a","b","id","sortDirections","text","toUpperCase","price","children","location","filters","onFilter","availability","Fishs","props","useRouteMatch","path","useState","sort","setSort","dispatch","useDispatch","useSelector","state","fish","dataSource","Object","values","json","result","index","item_month","item_place","item_size","shadow","name","order","key","data-price","type","to","exact","changeMonth","changePlace","changeSize","pagination","position"],"mappings":"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","file":"static/js/6.36dd5eed.chunk.js","sourcesContent":["import React, { useRef, useEffect } from 'react'\r\n\r\nfunction LazyImage({\r\n    loadingSource,\r\n    source,\r\n    className,\r\n    style,\r\n    observer,\r\n    onClick,\r\n}: any) {\r\n    const myRef = useRef(null)\r\n    useEffect(() => {\r\n        observer.observe(myRef.current)\r\n        return () => {\r\n            observer.unobserve(myRef.current)\r\n        }\r\n    }, [])\r\n    return (\r\n        <img className={className} style={style} src={loadingSource} data-src={source} ref={myRef} onClick={onClick}/>\r\n    )\r\n}\r\n\r\nexport default LazyImage","export function useObserver() {\r\n    const observer = new IntersectionObserver((entries) => {\r\n        entries.forEach((item: any) => {\r\n            if (item.intersectionRatio <= 0) return \r\n            else {\r\n                const { target } = item\r\n                const url = (target as any).dataset.src\r\n                target.setAttribute('src', url)\r\n                observer.unobserve(target)                \r\n            }\r\n        })\r\n    })\r\n    return observer\r\n}","import React from 'react'\r\nimport { Select } from 'antd'\r\n\r\nconst { Option } = Select\r\n\r\nfunction Months({\r\n    handleChange,\r\n    month,\r\n}: any) {    \r\n    return (\r\n        <Select style={{ width: '30%' }} placeholder={month} onChange={(value) => handleChange(value)}>\r\n            <Option value=\"所有时间\">所有时间</Option>\r\n            <Option value=\"一月\">一月</Option>\r\n            <Option value=\"二月\">二月</Option>\r\n            <Option value=\"三月\">三月</Option>\r\n            <Option value=\"四月\">四月</Option>\r\n            <Option value=\"五月\">五月</Option>\r\n            <Option value=\"六月\">六月</Option>\r\n            <Option value=\"七月\">七月</Option>\r\n            <Option value=\"八月\">八月</Option>\r\n            <Option value=\"九月\">九月</Option>\r\n            <Option value=\"十月\">十月</Option>\r\n            <Option value=\"十一月\">十一月</Option>\r\n            <Option value=\"十二月\">十二月</Option>\r\n        </Select>\r\n    )\r\n}\r\n\r\nexport default Months","const months: any = {\r\n    所有时间: 0,\r\n    一月: 1,\r\n    二月: 2,\r\n    三月: 3,\r\n    四月: 4,\r\n    五月: 5,\r\n    六月: 6,\r\n    七月: 7,\r\n    八月: 8,\r\n    九月: 9,\r\n    十月: 10,\r\n    十一月: 11,\r\n    十二月: 12,\r\n}\r\nconst places: any = {\r\n    '所有地点': '',\r\n    '河流': 'River',\r\n    '池塘': 'Pond',\r\n    '大海': 'Sea',\r\n    '入海口': 'River (Mouth)',\r\n    '码头': 'Pier',\r\n    '悬崖上': 'River (Clifftop)',\r\n    '雨天大海': 'Sea (when raining or snowing)',\r\n}\r\n\r\nconst sizes: any = {\r\n    所有大小: '',\r\n    最小: \"Smallest (1)\",\r\n    小: \"Small (2)\",\r\n    中等: \"Medium (3)\",\r\n    大: \"Medium (4)\",\r\n    超大: \"Large (5)\",\r\n    最大: \"Largest (6)\",\r\n    狭长: \"Narrow\",\r\n    背鳍: 'fin'\r\n}\r\n\r\nexport {\r\n    months,\r\n    places,\r\n    sizes,\r\n}","/**\r\n * @param {number} month\r\n * @param {string} interval\r\n * @returns {boolean}\r\n */\r\nfunction monthMatchInterval(month: number, interval: string): boolean {\r\n    const [month_start, month_end] = interval.split('-').map(i => Number(i))\r\n    if (month_start > month_end) {\r\n        if (month >= month_start || month <= month_end) return true\r\n    }\r\n    else {\r\n        if (month >= month_start && month <= month_end) return true\r\n    }\r\n    return false\r\n}\r\n\r\nexport function matchMonth(month: number, interval: string): boolean{\r\n    if (month === 0 || interval === '') return true\r\n    if (interval.includes('&')) {\r\n        const [interval_a, interval_b] = interval.split('&').map(s => s.trim())\r\n        return monthMatchInterval(month, interval_a) || monthMatchInterval(month, interval_b)\r\n    } else {\r\n        return monthMatchInterval(month, interval)\r\n    }\r\n}\r\n\r\nexport function matchPlace(p1: string, p2: string): boolean {\r\n    if (p1 === '') return true\r\n    if (p2.includes('&')) {\r\n        const [place_a, place_b] = p2.split('&').map(s => s.trim())\r\n        return p1 === place_a || p1 === place_b\r\n    }\r\n    return p1 === p2\r\n}\r\n\r\nexport function matchSize(s1: string, s2: string): boolean {\r\n    if (s1 === '') return true\r\n    if (s1 === 'fin' && s2.includes('fin')) return true\r\n    if (s1.includes('6') && s2.includes('fin (6)')) return true \r\n    if (s1.includes('Medium') && s2.includes('fin (4)')) return true\r\n    return s1 === s2 \r\n}","import React from 'react'\r\nimport { Select } from 'antd'\r\n\r\nconst { Option } = Select\r\n\r\nfunction Places({\r\n    handleChange,\r\n    place\r\n}: any) {\r\n    return (\r\n        <Select style={{ width: '30%' }} placeholder={place} onChange={(v) => handleChange(v)}>\r\n            <Option value=\"所有地点\">所有地点</Option>\r\n            <Option value=\"河流\">河流</Option>\r\n            <Option value=\"池塘\">池塘</Option>\r\n            <Option value=\"大海\">大海</Option>\r\n            <Option value=\"雨天大海\">雨天大海</Option>\r\n            <Option value=\"入海口\">入海口</Option>\r\n            <Option value=\"码头\">码头</Option>\r\n            <Option value=\"悬崖上\">悬崖上</Option>\r\n        </Select>\r\n    )\r\n}\r\n\r\nexport default Places","import React from 'react'\r\nimport { Select } from 'antd'\r\n\r\nconst { Option } = Select\r\n\r\nfunction Sizes({\r\n    handleChange,\r\n    size,\r\n}: any) {\r\n    return (\r\n        <Select style={{ width: '30%' }} placeholder={size} onChange={(v) => handleChange(v)}>\r\n            <Option value=\"所有大小\">所有大小</Option>\r\n            <Option value=\"最小\">最小</Option>\r\n            <Option value=\"小\">小</Option>\r\n            <Option value=\"中等\">中等</Option>\r\n            <Option value=\"大\">大</Option>\r\n            <Option value=\"超大\">超大</Option>\r\n            <Option value=\"最大\">最大</Option>\r\n            <Option value=\"狭长\">狭长</Option>\r\n            <Option value=\"背鳍\">背鳍</Option>\r\n        </Select>\r\n    )\r\n}\r\n\r\nexport default Sizes","import React, {\r\n    useState, \r\n    useEffect,\r\n    useRef,\r\n} from 'react'\r\nimport {\r\n    Link,\r\n    Switch,\r\n    Route,\r\n    useRouteMatch,\r\n    useLocation,\r\n} from 'react-router-dom'\r\nimport { \r\n    useSelector,\r\n    useDispatch,\r\n} from 'react-redux'\r\nimport {\r\n    Button,\r\n    Table,\r\n    Tooltip,\r\n} from 'antd'\r\n\r\n// 公共组件\r\nimport LazyImage from '../../components/LazyImage'\r\nimport Months from '../../components/months'\r\nimport Places from '../../components/places'\r\nimport Sizes from \"../../components/sizes\";\r\n\r\nimport json from '../../common/json/fishs.json'\r\nimport {\r\n    months,\r\n    places,\r\n    sizes,\r\n} from '../../common/utils/fish_data'\r\nimport {\r\n    matchMonth,\r\n    matchPlace,\r\n    matchSize,\r\n} from '../../common/utils/fish_match'\r\n\r\nimport { \r\n    changeMonth,\r\n    changePlace,\r\n    changeSize,\r\n} from './store/actionCreator'\r\n// import Item from 'antd/lib/list/Item'\r\nimport { StateType as RootState } from './type'\r\nimport { useObserver } from '../../common/utils/observer'\r\nconst columns: any[] = [\r\n    {\r\n        title: \"名称\",\r\n        dataIndex: 'name',\r\n        render: (value: any, record: any) => {\r\n            return (\r\n                <div >\r\n                    {/* <img className=\"fish_img\" style={{ width: 50}} src=\"./loading.svg\" data-src={`./fish/${record[\"file-name\"]}.png`} alt=\"鱼\"/> */}\r\n                    <LazyImage className='fish_img' style={{ width: 50}} loadingSource='./loading.svg' source={`./icons/fish/${record[\"file-name\"]}.png`} observer={observer}></LazyImage>\r\n                    <span>{value['name-cn']}</span>\r\n                </div>\r\n            )\r\n        }\r\n    },\r\n    {\r\n        title: \"序号\",\r\n        dataIndex: 'id',\r\n        sorter: (a: any, b: any) => a.id - b.id,\r\n        sortDirections: ['descend'],\r\n    },\r\n    {\r\n        title: \"英文名\",\r\n        dataIndex: 'file-name',\r\n        render: (text: string) => text.toUpperCase()\r\n    },\r\n    {\r\n        title: '价格',\r\n        dataIndex: 'price',\r\n        sorter: (a: any, b: any) => a.price - b.price,\r\n\r\n    },\r\n    {\r\n        title: '地点',\r\n        dataIndex: 'availability',\r\n        render: (children: any) => <div>{children.location}</div>,\r\n        filters: [\r\n            {\r\n                text: '河流',\r\n                value: 'River',\r\n            },\r\n            {\r\n                text: '大海',\r\n                value: 'Sea',\r\n            }\r\n        ],\r\n        onFilter: (value: any, record: any) => {\r\n            return record.availability.location.includes(value)\r\n        } \r\n    },\r\n    {\r\n        title: '阴影',\r\n        dataIndex: 'shadow',\r\n    }\r\n]\r\n\r\nconst observer = useObserver()\r\n\r\nfunction Fishs(props: any) {\r\n\r\n    const { path, url} = useRouteMatch()\r\n\r\n    const [sort, setSort] = useState(false) \r\n    const dispatch = useDispatch()\r\n    const [\r\n        month,\r\n        place,\r\n        size\r\n    ] = useSelector((state: any) => [state.fish.month, state.fish.place, state.fish.size])\r\n    \r\n    function onMonthChange (value: string): void {\r\n        dispatch(changeMonth(value))\r\n    }\r\n    \r\n    function onPlaceChange (value: string): void {\r\n        dispatch(changePlace(value))\r\n    }\r\n\r\n    function onSizeChange (value: string): void {\r\n        dispatch(changeSize(value))\r\n    }\r\n\r\n    function sortByPrice(): void {\r\n        setSort(true)\r\n    }\r\n    function sortByOrder(): void {\r\n        setSort(false)\r\n    }\r\n    \r\n    const dataSource = Object.values(json)\r\n    \r\n\r\n    const result = dataSource.map((item, index) => {\r\n        const item_month = item.availability[\"month-northern\"]\r\n        const item_place = item.availability.location\r\n        const item_size = item.shadow\r\n\r\n        if (matchMonth(months[month], item_month) && matchPlace(places[place], item_place) && matchSize(sizes[size], item_size)) {\r\n            return (\r\n                <Tooltip title={item.name['name-cn']}>\r\n                    <div className=\"item\" style={{order: sort ? item.price : 0}} key={item.id} data-price={item.price}>\r\n                        <div>\r\n                            {item.name['name-cn']}\r\n                        </div>\r\n                        <LazyImage className='fish_img' loadingSource='./loading.svg' source={`./icons/fish/${item[\"file-name\"]}.png`} observer={observer}></LazyImage>\r\n                        {/* <img className='fish_img' src='./loading.svg'  data-src={`./fish/${item[\"file-name\"]}.png`} alt=\"鱼\"/> */}\r\n                        <div>\r\n                            ${item.price}\r\n                        </div>\r\n                    </div>\r\n                </Tooltip>\r\n            )\r\n        } else {\r\n            return null\r\n        }\r\n    })\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"form\">\r\n                <Button className=\"btn\" type=\"primary\"><Link to={url}>图鉴</Link></Button>\r\n                <Button className=\"btn\" type=\"primary\"><Link to={`${url}/table`}>表格</Link></Button>\r\n            </div>\r\n            \r\n            <Switch>\r\n                <Route exact path={path}>\r\n                    <div className=\"form\">\r\n                        <Months handleChange={onMonthChange} month={month}></Months>\r\n                        <Places handleChange={onPlaceChange} place={place}></Places>\r\n                        <Sizes handleChange={onSizeChange} size={size}></Sizes>\r\n                    </div>\r\n                    <div className=\"form\">\r\n                        <Button className=\"btn\" onClick={sortByPrice}>按售价排序</Button>\r\n                        <Button className=\"btn\" onClick={sortByOrder}>按顺序排序</Button>\r\n                    </div>\r\n                    \r\n                    \r\n                    <div className=\"contain\">\r\n                        { result }\r\n                    </div>\r\n                </Route>\r\n                <Route path={`${path}/table`}>\r\n                    <Table dataSource={dataSource} columns={columns} pagination={{ position: ['bottomCenter']}}></Table>\r\n                </Route>\r\n            </Switch>\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default Fishs"],"sourceRoot":""}